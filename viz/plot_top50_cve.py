import sqlite3

import pandas as pd
import plotly.express as px
from util import get_pretty_hosts_count, get_working_dir

WORKINGDIR = get_working_dir()

# Connect to SQLite database
conn = sqlite3.connect(f'file:{WORKINGDIR}/dbs/private.db?mode=ro', uri=True)

num_hosts_query = """
    SELECT COUNT(*) AS num_hosts 
    FROM results;
"""
df_hosts = pd.read_sql_query(num_hosts_query, conn)
pretty_hosts_count = format(df_hosts['num_hosts'][0], ",")

# Query the data and calculate the proportions
query = """
    SELECT cve_counts.CVE, cve_counts.count, cve_defs.summary, cve_defs.cvss, cve_defs.refs
    FROM cve_counts 
    JOIN vulns ON cve_counts.CVE = vulns.CVE
    JOIN cve_defs ON vulns.CVE = cve_defs.CVE
    WHERE cve_defs.cvss >= 4.0 
    GROUP BY cve_counts.CVE
    ORDER BY cve_counts.count DESC  
    LIMIT 50
"""
df = pd.read_sql_query(query, conn)

# Calculate the proportion of total rows for each CVE
total_count = df['count'].sum()
pretty_count = format(total_count, ",")
pretty_hosts_count = get_pretty_hosts_count()
df['proportion'] = df['count'] / total_count

# Create the treemap using Plotly
fig = px.treemap(df, 
                 path=['cvss', 'CVE', 'count'], 
                 values='proportion',
                 color='proportion',
                 color_continuous_scale='Agsunset',
                 hover_data={'CVE': True, 'count': True, 'proportion': True, 'summary': True, 'refs': True},
                 width=1600,
                 height=900
                 )

# Update the hover template
fig.update_traces(hovertemplate='<b>CVE:</b> %{customdata[0]}<br><b>proportion:</b> %{customdata[2]:.2%}<br><b>count:</b> %{customdata[1]}<br><b>summary:</b> %{customdata[3]}<br><b>refs:</b> %{customdata[4]}<br>')
# Update the font size of the labels
fig.update_layout(
    font=dict(size=14),
    title={
        'text': f"Top 50 CVEs (CVSS >= 4.0 (medium)) seen among {pretty_count} total vulns in the set generated by {pretty_hosts_count} hosts",
        'font': {
            'size': 28,
            'color': 'black'
        },
        'x': 0.5,
        'y': 0.98,
        'xanchor': 'center',
        'yanchor': 'top'
    }
)

# Save the plot
fig.write_html(f"viz/output/{WORKINGDIR}-top50_cve.html", auto_open=True)
